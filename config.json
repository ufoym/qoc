{
  "languages": {
    "python": {
      "extension": [".py"],
      "node_weights": {
        "function_definition": 10,
        "async_function_definition": 12,
        "class_definition": 15,
        "if_statement": 3,
        "for_statement": 4,
        "while_statement": 4,
        "try_statement": 5,
        "with_statement": 3,
        "lambda": 6,
        "list_comprehension": 5,
        "dictionary_comprehension": 5,
        "set_comprehension": 5,
        "generator_expression": 5,
        "call": 2,
        "attribute": 1,
        "binary_operator": 2,
        "comparison_operator": 2,
        "boolean_operator": 2,
        "assignment": 2,
        "augmented_assignment": 2,
        "return_statement": 1,
        "expression_statement": 1,
        "import_statement": 1,
        "import_from_statement": 1,
        "identifier": 0.5,
        "integer": 0.5,
        "float": 0.5,
        "string": 0.5,
        "string_content": 0.3,
        "string_start": 0.1,
        "string_end": 0.1,
        "interpolation": 1,
        "true": 0.3,
        "false": 0.3,
        "none": 0.3,
        "def": 0.2,
        "class": 0.2,
        "if": 0.2,
        "for": 0.2,
        "while": 0.2,
        "try": 0.2,
        "with": 0.2,
        "return": 0.2,
        "import": 0.2,
        "from": 0.2,
        "in": 0.2,
        "and": 0.2,
        "or": 0.2,
        "not": 0.2,
        "is": 0.2,
        "else": 0.2,
        "elif": 0.2,
        "except": 0.2,
        "finally": 0.2,
        "as": 0.2,
        "global": 0.2,
        "nonlocal": 0.2,
        "assert": 0.2,
        "pass": 0.2,
        "break": 0.2,
        "continue": 0.2,
        "del": 0.2,
        "yield": 0.2,
        "raise": 0.2,
        "lambda": 0.2,
        "parameters": 0.5,
        "parameter_list": 0.5,
        "argument_list": 0.5,
        "block": 0.3,
        "module": 0.1,
        "(": 0.1,
        ")": 0.1,
        "[": 0.1,
        "]": 0.1,
        "{": 0.1,
        "}": 0.1,
        ":": 0.1,
        ";": 0.1,
        ",": 0.1,
        ".": 0.1,
        "=": 0.1,
        "+": 0.1,
        "-": 0.1,
        "*": 0.1,
        "/": 0.1,
        "//": 0.1,
        "%": 0.1,
        "**": 0.1,
        "==": 0.1,
        "!=": 0.1,
        "<": 0.1,
        ">": 0.1,
        "<=": 0.1,
        ">=": 0.1
      }
    },
    "javascript": {
      "extension": [".js", ".jsx", ".ts", ".tsx"],
      "node_weights": {
        "function_declaration": 10,
        "function_expression": 9,
        "arrow_function": 8,
        "method_definition": 8,
        "class_declaration": 15,
        "if_statement": 3,
        "for_statement": 4,
        "for_in_statement": 4,
        "for_of_statement": 4,
        "while_statement": 4,
        "do_statement": 4,
        "try_statement": 5,
        "switch_statement": 6,
        "call_expression": 2,
        "member_expression": 1,
        "binary_expression": 2,
        "assignment_expression": 2,
        "return_statement": 1,
        "expression_statement": 1,
        "import_statement": 1,
        "export_statement": 1,
        "variable_declaration": 2,
        "lexical_declaration": 2,
        "identifier": 0.5,
        "number": 0.5,
        "string": 0.5,
        "template_string": 1.5,
        "true": 0.3,
        "false": 0.3,
        "null": 0.3,
        "undefined": 0.3
      }
    },
    "java": {
      "extension": [".java"],
      "node_weights": {
        "method_declaration": 10,
        "constructor_declaration": 10,
        "class_declaration": 15,
        "interface_declaration": 12,
        "enum_declaration": 10,
        "if_statement": 3,
        "for_statement": 4,
        "enhanced_for_statement": 4,
        "while_statement": 4,
        "do_statement": 4,
        "try_statement": 5,
        "switch_statement": 6,
        "method_invocation": 2,
        "field_access": 1,
        "binary_expression": 2,
        "assignment_expression": 2,
        "return_statement": 1,
        "expression_statement": 1,
        "import_declaration": 1,
        "package_declaration": 1,
        "variable_declarator": 2,
        "identifier": 0.5,
        "decimal_integer_literal": 0.5,
        "decimal_floating_point_literal": 0.5,
        "string_literal": 0.5,
        "character_literal": 0.5,
        "true": 0.3,
        "false": 0.3,
        "null_literal": 0.3
      }
    },
    "cpp": {
      "extension": [".cpp", ".cc", ".cxx", ".hpp", ".hxx", ".h"],
      "node_weights": {
        "function_definition": 10,
        "function_declarator": 8,
        "class_specifier": 15,
        "struct_specifier": 12,
        "union_specifier": 12,
        "enum_specifier": 10,
        "namespace_definition": 8,
        "template_declaration": 12,
        "if_statement": 3,
        "for_statement": 4,
        "range_based_for_statement": 4,
        "while_statement": 4,
        "do_statement": 4,
        "switch_statement": 6,
        "try_statement": 5,
        "call_expression": 2,
        "field_expression": 1,
        "binary_expression": 2,
        "assignment_expression": 2,
        "return_statement": 1,
        "expression_statement": 1,
        "preproc_include": 1,
        "preproc_define": 2,
        "declaration": 2,
        "init_declarator": 2,
        "identifier": 0.5,
        "number_literal": 0.5,
        "string_literal": 0.5,
        "char_literal": 0.5,
        "true": 0.3,
        "false": 0.3,
        "null": 0.3,
        "nullptr": 0.3
      }
    },
    "go": {
      "extension": [".go"],
      "node_weights": {
        "function_declaration": 10,
        "method_declaration": 10,
        "type_declaration": 8,
        "struct_type": 12,
        "interface_type": 10,
        "if_statement": 3,
        "for_statement": 4,
        "switch_statement": 6,
        "type_switch_statement": 6,
        "select_statement": 5,
        "go_statement": 3,
        "defer_statement": 2,
        "call_expression": 2,
        "selector_expression": 1,
        "binary_expression": 2,
        "assignment_statement": 2,
        "return_statement": 1,
        "expression_statement": 1,
        "import_declaration": 1
      }
    }
  },
  "default_weight": 1,
  "comment_weight": 0,
  "whitespace_weight": 0
} 